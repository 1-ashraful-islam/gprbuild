--  ============================================================================
--
--         WARNING: THIS FILE IS AUTO-GENERATED. DO NOT MODIFY.
--
--  This file was generated from phaSensorDepthData.idl using "rtiddsgen".
--  The rtiddsgen tool is part of the RTI Data Distribution Service distribution.
--  For more information, type 'rtiddsgen -help' at a command shell
--  or consult the RTI Data Distribution Service manual.
--
--  ============================================================================

pragma Warnings (Off); --  Since this is autogenerated code.
with System;

with DDS.ReadCondition_Impl;

with com.saabgroup.cms.pha.sensor.depth.Depth; use com.saabgroup.cms.pha.sensor.depth.Depth;
with com.saabgroup.cms.pha.sensor.depth.Depth_Seq; use com.saabgroup.cms.pha.sensor.depth.Depth_Seq;

pragma Warnings (On);
package body com.saabgroup.cms.pha.sensor.depth.Depth_DataReader is

   ----------
   -- Read --
   ----------

   procedure Read
     (This            : not null access Ref;
      Received_Data   : not null access Depth_Seq.Sequence;
      Info_Seq        : not null access DDS.SampleInfo_Seq.Sequence;
      Max_Samples     : in DDS.Long := DDS.LENGTH_UNLIMITED;
      Sample_States   : in DDS.SampleStateMask := DDS.ANY_SAMPLE_STATE;
      View_States     : in DDS.ViewStateMask := DDS.ANY_VIEW_STATE;
      Instance_States : in DDS.InstanceStateMask := DDS.ANY_INSTANCE_STATE)
   is
      function Internal
        (This            : System.Address;
         Received_Data   : not null access Depth_Seq.Sequence;
         Info_Seq        : not null access DDS.SampleInfo_Seq.Sequence;
         Max_Samples     : in DDS.Long := DDS.LENGTH_UNLIMITED;
         Sample_States   : in DDS.SampleStateMask := DDS.ANY_SAMPLE_STATE;
         View_States     : in DDS.ViewStateMask := DDS.ANY_VIEW_STATE;
         Instance_States : in DDS.InstanceStateMask := DDS.ANY_INSTANCE_STATE)
         return DDS.ReturnCode_T;
      pragma Import (C, Internal, "com_saabgroup_cms_pha_sensor_depth_DepthDataReader_read");
   begin
      DDS.Ret_Code_To_Exception
        (Internal
           (This.GetInterface,
            Received_Data,
            Info_Seq,
            Max_Samples,
            Sample_States,
            View_States,
            Instance_States));
   end Read;

   ----------
   -- Take --
   ----------

   procedure Take
     (This            : not null access Ref;
      Received_Data   : not null access Depth_Seq.Sequence;
      Info_Seq        : not null access DDS.SampleInfo_Seq.Sequence;
      Max_Samples     : in DDS.Long := DDS.LENGTH_UNLIMITED;
      Sample_States   : in DDS.SampleStateMask := DDS.ANY_SAMPLE_STATE;
      View_States     : in DDS.ViewStateMask := DDS.ANY_VIEW_STATE;
      Instance_States : in DDS.InstanceStateMask := DDS.ANY_INSTANCE_STATE)
   is
      function Internal
        (This            : System.Address;
         Received_Data   : not null access Depth_Seq.Sequence;
         Info_Seq        : not null access DDS.SampleInfo_Seq.Sequence;
         Max_Samples     : in DDS.Long := DDS.LENGTH_UNLIMITED;
         Sample_States   : in DDS.SampleStateMask := DDS.ANY_SAMPLE_STATE;
         View_States     : in DDS.ViewStateMask := DDS.ANY_VIEW_STATE;
         Instance_States : in DDS.InstanceStateMask := DDS.ANY_INSTANCE_STATE)
         return DDS.ReturnCode_T;
      pragma Import (C, Internal, "com_saabgroup_cms_pha_sensor_depth_DepthDataReader_take");
   begin
      DDS.Ret_Code_To_Exception
        (Internal
           (This.GetInterface,
            Received_Data,
            Info_Seq,
            Max_Samples,
            Sample_States,
            View_States,
            Instance_States));
   end Take;

   ----------------------
   -- Read_W_Condition --
   ----------------------

   procedure Read_W_Condition
     (This          : not null access Ref;
      Received_Data : not null access Depth_Seq.Sequence;
      Info_Seq      : not null access DDS.SampleInfo_Seq.Sequence;
      Max_Samples   : in DDS.Long := DDS.LENGTH_UNLIMITED;
      Condition     : DDS.ReadCondition.Ref_Access)
   is
      function Internal
        (This          : System.Address;
         Received_Data : not null access Depth_Seq.Sequence;
         Info_Seq      : not null access DDS.SampleInfo_Seq.Sequence;
         Max_Samples   : in DDS.Long := DDS.LENGTH_UNLIMITED;
         Condition     : System.Address)
         return DDS.ReturnCode_T;
      pragma Import (C, Internal, "com_saabgroup_cms_pha_sensor_depth_DepthDataReader_read_w_condition");

      C : constant DDS.ReadCondition_Impl.Ref_Access :=
        DDS.ReadCondition_Impl.Ref_Access (Condition);

   begin
      DDS.Ret_Code_To_Exception
        (Internal
           (This.GetInterface,
            Received_Data,
            Info_Seq,
            Max_Samples,
            C.GetInterface));
   end Read_W_Condition;

   ----------------------
   -- Take_W_Condition --
   ----------------------

   procedure Take_W_Condition
     (This          : not null access Ref;
      Received_Data : not null access Depth_Seq.Sequence;
      Info_Seq      : not null access DDS.SampleInfo_Seq.Sequence;
      Max_Samples   : in DDS.Long := DDS.LENGTH_UNLIMITED;
      Condition     : DDS.ReadCondition.Ref_Access)
   is
      function Internal
        (This          : System.Address;
         Received_Data : not null access Depth_Seq.Sequence;
         Info_Seq      : not null access DDS.SampleInfo_Seq.Sequence;
         Max_Samples   : in DDS.Long := DDS.LENGTH_UNLIMITED;
         Condition     : System.Address)
         return DDS.ReturnCode_T;
      pragma Import (C, Internal, "com_saabgroup_cms_pha_sensor_depth_DepthDataReader_take_w_condition");

      C : constant DDS.ReadCondition_Impl.Ref_Access :=
        DDS.ReadCondition_Impl.Ref_Access (Condition);

   begin
      DDS.Ret_Code_To_Exception
        (Internal
           (This.GetInterface,
            Received_Data,
            Info_Seq,
            Max_Samples,
            C.GetInterface));
   end Take_W_Condition;

   ----------------------
   -- Read_Next_Sample --
   ----------------------

   procedure Read_Next_Sample
     (This          : not null access Ref;
      Received_Data : not null Depth_Access;
      Sample_Info   : not null access DDS.SampleInfo)
   is
      function Internal
        (This          : System.Address;
         Received_Data : not null Depth_Access;
         Sample_Info   : not null access DDS.SampleInfo)
         return DDS.ReturnCode_T;
      pragma Import (C, Internal, "com_saabgroup_cms_pha_sensor_depth_DepthDataReader_read_next_sample");
   begin
      DDS.Ret_Code_To_Exception
        (Internal
           (This.GetInterface,
            Received_Data,
            Sample_Info));
   end Read_Next_Sample;

   ----------------------
   -- Take_Next_Sample --
   ----------------------

   procedure Take_Next_Sample
     (This          : not null access Ref;
      Received_Data : not null Depth_Access;
      Sample_Info   : not null access DDS.SampleInfo)
   is
      function Internal
        (This          : System.Address;
         Received_Data : not null Depth_Access;
         Sample_Info   : not null access DDS.SampleInfo)
         return DDS.ReturnCode_T;
      pragma Import (C, Internal, "com_saabgroup_cms_pha_sensor_depth_DepthDataReader_take_next_sample");
   begin
      DDS.Ret_Code_To_Exception
        (Internal
           (This.GetInterface,
            Received_Data,
            Sample_Info));
   end Take_Next_Sample;

   -------------------
   -- Read_Instance --
   -------------------

   procedure Read_Instance
     (This            : not null access Ref;
      Received_Data   : not null access Depth_Seq.Sequence;
      Info_Seq        : not null access DDS.SampleInfo_Seq.Sequence;
      Max_Samples     : in DDS.Long := DDS.LENGTH_UNLIMITED;
      A_Handle        : access constant DDS.InstanceHandle_T;
      Sample_States   : in DDS.SampleStateMask := DDS.ANY_SAMPLE_STATE;
      View_States     : in DDS.ViewStateMask := DDS.ANY_VIEW_STATE;
      Instance_States : in DDS.InstanceStateMask := DDS.ANY_INSTANCE_STATE)
   is
      function Internal
        (This            : System.Address;
         Received_Data   : not null access Depth_Seq.Sequence;
         Info_Seq        : not null access DDS.SampleInfo_Seq.Sequence;
         Max_Samples     : in DDS.Long := DDS.LENGTH_UNLIMITED;
         A_Handle        : access constant DDS.InstanceHandle_T;
         Sample_States   : in DDS.SampleStateMask := DDS.ANY_SAMPLE_STATE;
         View_States     : in DDS.ViewStateMask := DDS.ANY_VIEW_STATE;
         Instance_States : in DDS.InstanceStateMask := DDS.ANY_INSTANCE_STATE)
         return DDS.ReturnCode_T;
      pragma Import (C, Internal, "com_saabgroup_cms_pha_sensor_depth_DepthDataReader_read_instance");
   begin
      DDS.Ret_Code_To_Exception
        (Internal
           (This.GetInterface,
            Received_Data,
            Info_Seq,
            Max_Samples,
            A_Handle,
            Sample_States,
            View_States,
            Instance_States));
   end Read_Instance;

   -------------------
   -- Take_Instance --
   -------------------

   procedure Take_Instance
     (This            : not null access Ref;
      Received_Data   : not null access Depth_Seq.Sequence;
      Info_Seq        : not null access DDS.SampleInfo_Seq.Sequence;
      Max_Samples     : in DDS.Long := DDS.LENGTH_UNLIMITED;
      A_Handle        : access constant DDS.InstanceHandle_T;
      Sample_States   : in DDS.SampleStateMask := DDS.ANY_SAMPLE_STATE;
      View_States     : in DDS.ViewStateMask := DDS.ANY_VIEW_STATE;
      Instance_States : in DDS.InstanceStateMask := DDS.ANY_INSTANCE_STATE)
   is
      function Internal
        (This            : System.Address;
         Received_Data   : not null access Depth_Seq.Sequence;
         Info_Seq        : not null access DDS.SampleInfo_Seq.Sequence;
         Max_Samples     : in DDS.Long := DDS.LENGTH_UNLIMITED;
         A_Handle        : access constant DDS.InstanceHandle_T;
         Sample_States   : in DDS.SampleStateMask := DDS.ANY_SAMPLE_STATE;
         View_States     : in DDS.ViewStateMask := DDS.ANY_VIEW_STATE;
         Instance_States : in DDS.InstanceStateMask := DDS.ANY_INSTANCE_STATE)
         return DDS.ReturnCode_T;
      pragma Import (C, Internal, "com_saabgroup_cms_pha_sensor_depth_DepthDataReader_take_instance");
   begin
      DDS.Ret_Code_To_Exception
        (Internal
           (This.GetInterface,
            Received_Data,
            Info_Seq,
            Max_Samples,
            A_Handle,
            Sample_States,
            View_States,
            Instance_States));
   end Take_Instance;

   ------------------------
   -- Read_Next_Instance --
   ------------------------

   procedure Read_Next_Instance
     (This            : not null access Ref;
      Received_Data   : not null access Depth_Seq.Sequence;
      Info_Seq        : not null access DDS.SampleInfo_Seq.Sequence;
      Max_Samples     : in DDS.Long := DDS.LENGTH_UNLIMITED;
      Previous_Handle : access constant DDS.InstanceHandle_T;
      Sample_States   : in DDS.SampleStateMask := DDS.ANY_SAMPLE_STATE;
      View_States     : in DDS.ViewStateMask := DDS.ANY_VIEW_STATE;
      Instance_States : in DDS.InstanceStateMask := DDS.ANY_INSTANCE_STATE)
   is
      function Internal
        (This            : System.Address;
         Received_Data   : not null access Depth_Seq.Sequence;
         Info_Seq        : not null access DDS.SampleInfo_Seq.Sequence;
         Max_Samples     : in DDS.Long := DDS.LENGTH_UNLIMITED;
         Previous_Handle : access constant DDS.InstanceHandle_T;
         Sample_States   : in DDS.SampleStateMask := DDS.ANY_SAMPLE_STATE;
         View_States     : in DDS.ViewStateMask := DDS.ANY_VIEW_STATE;
         Instance_States : in DDS.InstanceStateMask := DDS.ANY_INSTANCE_STATE)
         return DDS.ReturnCode_T;
      pragma Import (C, Internal, "com_saabgroup_cms_pha_sensor_depth_DepthDataReader_read_next_instance");
   begin
      DDS.Ret_Code_To_Exception
        (Internal
           (This.GetInterface,
            Received_Data,
            Info_Seq,
            Max_Samples,
            Previous_Handle,
            Sample_States,
            View_States,
            Instance_States));
   end Read_Next_Instance;

   ------------------------
   -- Take_Next_Instance --
   ------------------------

   procedure Take_Next_Instance
     (This            : not null access Ref;
      Received_Data   : not null access Depth_Seq.Sequence;
      Info_Seq        : not null access DDS.SampleInfo_Seq.Sequence;
      Max_Samples     : in DDS.Long := DDS.LENGTH_UNLIMITED;
      Previous_Handle : access constant DDS.InstanceHandle_T;
      Sample_States   : in DDS.SampleStateMask := DDS.ANY_SAMPLE_STATE;
      View_States     : in DDS.ViewStateMask := DDS.ANY_VIEW_STATE;
      Instance_States : in DDS.InstanceStateMask := DDS.ANY_INSTANCE_STATE)
   is
      function Internal
        (This            : System.Address;
         Received_Data   : not null access Depth_Seq.Sequence;
         Info_Seq        : not null access DDS.SampleInfo_Seq.Sequence;
         Max_Samples     : in DDS.Long := DDS.LENGTH_UNLIMITED;
         Previous_Handle : access constant DDS.InstanceHandle_T;
         Sample_States   : in DDS.SampleStateMask := DDS.ANY_SAMPLE_STATE;
         View_States     : in DDS.ViewStateMask := DDS.ANY_VIEW_STATE;
         Instance_States : in DDS.InstanceStateMask := DDS.ANY_INSTANCE_STATE)
         return DDS.ReturnCode_T;
      pragma Import (C, Internal, "com_saabgroup_cms_pha_sensor_depth_DepthDataReader_take_next_instance");
   begin
      DDS.Ret_Code_To_Exception
        (Internal
           (This.GetInterface,
            Received_Data,
            Info_Seq,
            Max_Samples,
            Previous_Handle,
            Sample_States,
            View_States,
            Instance_States));
   end Take_Next_Instance;

   ------------------------------------
   -- Read_Next_Instance_W_Condition --
   ------------------------------------

   procedure Read_Next_Instance_W_Condition
     (This            : not null access Ref;
      Received_Data   : not null access Depth_Seq.Sequence;
      Info_Seq        : not null access DDS.SampleInfo_Seq.Sequence;
      Max_Samples     : in DDS.Long := DDS.LENGTH_UNLIMITED;
      Previous_Handle : access constant DDS.InstanceHandle_T;
      Condition       : DDS.ReadCondition.Ref_Access)
   is
      function Internal
        (This            : System.Address;
         Received_Data   : not null access Depth_Seq.Sequence;
         Info_Seq        : not null access DDS.SampleInfo_Seq.Sequence;
         Max_Samples     : in DDS.Long := DDS.LENGTH_UNLIMITED;
         Previous_Handle : access constant DDS.InstanceHandle_T;
         Condition       : System.Address)
         return DDS.ReturnCode_T;
      pragma Import (C, Internal, "com_saabgroup_cms_pha_sensor_depth_DepthDataReader_read_next_instance_w_condition");

      C : constant DDS.ReadCondition_Impl.Ref_Access :=
        DDS.ReadCondition_Impl.Ref_Access (Condition);

   begin
      DDS.Ret_Code_To_Exception
        (Internal
           (This.GetInterface,
            Received_Data,
            Info_Seq,
            Max_Samples,
            Previous_Handle,
            C.GetInterface));
   end Read_Next_Instance_W_Condition;

   ------------------------------------
   -- Take_Next_Instance_W_Condition --
   ------------------------------------

   procedure Take_Next_Instance_W_Condition
     (This            : not null access Ref;
      Received_Data   : not null access Depth_Seq.Sequence;
      Info_Seq        : not null access DDS.SampleInfo_Seq.Sequence;
      Max_Samples     : in DDS.Long := DDS.LENGTH_UNLIMITED;
      Previous_Handle : access constant DDS.InstanceHandle_T;
      Condition       : DDS.ReadCondition.Ref_Access)
   is
      function Internal
        (This            : System.Address;
         Received_Data   : not null access Depth_Seq.Sequence;
         Info_Seq        : not null access DDS.SampleInfo_Seq.Sequence;
         Max_Samples     : in DDS.Long := DDS.LENGTH_UNLIMITED;
         Previous_Handle : access constant DDS.InstanceHandle_T;
         Condition       : System.Address)
         return DDS.ReturnCode_T;
      pragma Import (C, Internal, "com_saabgroup_cms_pha_sensor_depth_DepthDataReader_take_next_instance_w_condition");

      C : constant DDS.ReadCondition_Impl.Ref_Access :=
        DDS.ReadCondition_Impl.Ref_Access (Condition);

   begin
      DDS.Ret_Code_To_Exception
        (Internal
           (This.GetInterface,
            Received_Data,
            Info_Seq,
            Max_Samples,
            Previous_Handle,
            C.GetInterface));
   end Take_Next_Instance_W_Condition;

   -------------------
   -- Get_Key_Value --
   -------------------

   procedure Get_Key_Value
     (This       : not null access Ref;
      Key_Holder : not null Depth_Access;
      Handle     : access constant DDS.InstanceHandle_T)
   is
      function Internal
        (This       : System.Address;
         Key_Holder : not null Depth_Access;
         Handle     : access constant DDS.InstanceHandle_T)
         return DDS.ReturnCode_T;
      pragma Import (C, Internal, "com_saabgroup_cms_pha_sensor_depth_DepthDataReader_get_key_value");
   begin
      DDS.Ret_Code_To_Exception
        (Internal
           (This.GetInterface,
            Key_Holder,
            Handle));
   end Get_Key_Value;

   ---------------------
   -- Lookup_Instance --
   ---------------------

   procedure Lookup_Instance
     (This       : not null access Ref;
      Key_Holder : not null Depth_Access)
   is
      function Internal
        (This       : System.Address;
         Key_Holder : not null Depth_Access)
         return DDS.ReturnCode_T;
      pragma Import (C, Internal, "com_saabgroup_cms_pha_sensor_depth_DepthDataReader_lookup_instance");
   begin
      DDS.Ret_Code_To_Exception
        (Internal
           (This.GetInterface,
            Key_Holder));
   end Lookup_Instance;

   -----------------
   -- Return_Loan --
   -----------------

   procedure Return_Loan
     (This          : not null access Ref;
      Received_Data : not null access Depth_Seq.Sequence;
      Info_Seq      : not null access DDS.SampleInfo_Seq.Sequence)
   is
      function Internal
        (This          : System.Address;
         Received_Data : not null access Depth_Seq.Sequence;
         Info_Seq      : not null access DDS.SampleInfo_Seq.Sequence)
         return DDS.ReturnCode_T;
      pragma Import (C, Internal, "com_saabgroup_cms_pha_sensor_depth_DepthDataReader_return_loan");
   begin
      DDS.Ret_Code_To_Exception
        (Internal
           (This.GetInterface,
            Received_Data,
            Info_Seq));
   end Return_Loan;

   function CreateTypedI return DDS.DataReader.Ref_Access is
      S_Access : Ref_Access;
   begin
      S_Access := new Ref;
      return DDS.DataReader.Ref_Access (S_Access);
   end CreateTypedI;

   procedure DestroyTypedI (Reader : in out DDS.DataReader.Ref_Access) is
      R_Impl : DDS.DataReader_Impl.Ref_Access :=
        DDS.DataReader_Impl.Ref_Access (Reader);
   begin
      DDS.DataReader_Impl.Free (R_Impl);
      Reader := null;
   end DestroyTypedI;

begin
   null;
end com.saabgroup.cms.pha.sensor.depth.Depth_DataReader;
